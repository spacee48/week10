name: Automated Deployment to Staging Environment

on: 
  workflow_dispatch:
  
  push:
    branches:
      - testing

env:
  AZURE_CLUSTER_NAME: week10-aks-cluster
  STAGING_RESOURCE_GROUP: week10-rg-staging
  STAGING_STORAGE_NAME: week10storagestaging
  AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  LOCATION: eastus

jobs:
  test_and_push_backend:
    uses: ./.github/workflows/backend_ci.yml
    secrets:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  
  test_and_push_frontend:
    uses: ./.github/workflows/frontend_ci.yml
    secrets:
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  
  create_staging_environment:
    needs: 
      - test_and_push_backend
      - test_and_push_frontend
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set Kubernetes context (get AKS credentials)
      run: |
          az aks get-credentials --resource-group ${{ env.STAGING_RESOURCE_GROUP }} --name ${{ env.AZURE_CLUSTER_NAME }} --overwrite-existing
    
    - name: Create Staging Namespace
      run: |
          kubectl create namespace staging || echo "Namespace 'staging' already exists"
    
    - name: Create Azure Storage Account
      run: |
        az storage account create \
          --name ${{ env.STAGING_STORAGE_NAME }} \
          --resource-group ${{ env.STAGING_RESOURCE_GROUP }} \
          --location ${{ env.LOCATION }} \
          --sku Standard_LRS

    - name: Logout from Azure
      run: az logout
  
  deploy_backend:
    needs:
      - create_staging_environment
    uses: ./.github/workflows/backend_cd.yml
    with:
      aks_cluster_name: week10-aks-cluster
      aks_resource_group: week10-rg-staging
      aks_acr_name: sit722devopsacraprylle
      aks_storage_name: week10storagestaging
      aks_namespace: 'staging'
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
  
  deploy_frontend:
    needs: deploy_backend
    uses: ./.github/workflows/frontend_cd.yml
    with:
      product_api_ip: ${{ needs.deploy_backend.outputs.PRODUCT_API_IP }}
      order_api_ip: ${{ needs.deploy_backend.outputs.ORDER_API_IP }}
      customer_api_ip: ${{ needs.deploy_backend.outputs.CUSTOMER_API_IP }}
      aks_cluster_name: 'week10-aks-cluster'
      aks_resource_group: 'week10-rg-staging'
      aks_namespace: 'staging'
    secrets:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_CONTAINER_REGISTRY: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  
  acceptance_testing:
    needs: [deploy_frontend, deploy_backend]
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Kubernetes context (get AKS credentials)
        run: |
          az aks get-credentials --resource-group ${{ env.STAGING_RESOURCE_GROUP }} --name ${{ env.AZURE_CLUSTER_NAME }} --overwrite-existing

      - name: Get Frontend IP Address From Staging Namespace
        run: |
          FRONTEND_IP=$(kubectl get service frontend-w05-aks -n staging -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "FRONTEND_IP=$FRONTEND_IP" >> $GITHUB_ENV

      - name: Smoke Testing Frontend and Backend
        run: |
          echo "Testing Product Service at ${{ needs.deploy_backend.outputs.PRODUCT_API_IP }}"
          curl -f http://${{ needs.deploy_backend.outputs.PRODUCT_API_IP }}:8000 || exit 1

          echo "Testing Order Service at ${{ needs.deploy_backend.outputs.ORDER_API_IP }}"
          curl -f http://${{ needs.deploy_backend.outputs.ORDER_API_IP }}:8001 || exit 1

          echo "Testing Customer Service at ${{ needs.deploy_backend.outputs.CUSTOMER_API_IP }}"
          curl -f http://${{ needs.deploy_backend.outputs.CUSTOMER_API_IP }}:8002 || exit 1

          echo "Testing Frontend at $FRONTEND_IP"
          curl -f http://${{ env.FRONTEND_IP }}:80 || exit 1
      
  delete_staging_environment:
    needs: acceptance_testing
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Set Kubernetes context (get AKS credentials)
        run: |
          az aks get-credentials --resource-group ${{ env.STAGING_RESOURCE_GROUP }} --name ${{ env.AZURE_CLUSTER_NAME }} --overwrite-existing

      - name: Delete AKS Cluster
        run: kubectl delete namespace staging

      - name: Delete Azure Storage Account
        run: |
          echo "Deleting Storage Account: ${{ env.STAGING_STORAGE_NAME }}"
          az storage account delete \
            --name ${{ env.STAGING_STORAGE_NAME }} \
            --resource-group ${{ env.STAGING_RESOURCE_GROUP }} \
            --yes

      - name: Logout from Azure
        run: az logout
    

       