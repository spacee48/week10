# week10/.github/workflows/ci_workflow.yml

name: Backend CI - Test, Build and Push Images to ACR

on:
  #manual trigger
  workflow_dispatch:

  workflow_call:
    secrets:
      AZURE_CONTAINER_REGISTRY:
        required: true
      AZURE_CREDENTIALS:
        required: true

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      # Customer DB Container
      customer_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: customers
        # Make pg_isready available so the service is healthy before tests runs
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Product DB Container
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        # Make pg_isready available so the service is healthy before tests runs
        ports:
          - 5433:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      # Order DB Container
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        # Make pg_isready available so the service is healthy before tests runs
        ports:
          - 5434:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
    steps:
      #1. Checkout the repository code to the runner
      - name: Checkout repository
        uses: actions/checkout@v4
      
      #2. Set up Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      #3. Install dependencies and run code quality checks
      - name: Install dependencies
        run: | # Use a multi-line script to install pip dependencies
          pip install --upgrade pip
          # Loop through each backend service folder
          for req in backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          # Install CI tools
          pip install pytest httpx
                  
      # 4. Run tests for customer service
      - name: Run customer_service tests
        working-directory: backend/customer_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: customers
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest tests --maxfail=1 --disable-warnings -q
      
      # 5. Run tests for product service
      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest tests --maxfail=1 --disable-warnings -q

      # 6. Run tests for order service
      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5434
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          pytest tests --maxfail=1 --disable-warnings -q

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login using Service Principal
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Login to Azure Container Registry (ACR)
      run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

    - name: Build and Push Customer Service Image
      run: |
        docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_customer_service:latest ./backend/customer_service/
        docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_customer_service:latest
    
    - name: Build and Push Product Service Image
      run: |
        docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_product_service:latest ./backend/product_service/
        docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_product_service:latest

    - name: Build and Push Order Service Image
      run: |
        docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_order_service:latest ./backend/order_service/
        docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_order_service:latest 
    
    - name: Logout from Azure
      run: az logout
      if: always()